// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Api_University.Data;

#nullable disable

namespace Api_University.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250529035600_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Api_University.Models.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Api_University.Models.EstudianteMateriaProfesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("EstudianteMateriaProfesores");
                });

            modelBuilder.Entity("Api_University.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Creditos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Materias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Creditos = 3,
                            Nombre = "Matemáticas I",
                            ProfesorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Creditos = 3,
                            Nombre = "Física I",
                            ProfesorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Creditos = 3,
                            Nombre = "Química I",
                            ProfesorId = 2
                        },
                        new
                        {
                            Id = 4,
                            Creditos = 3,
                            Nombre = "Biología I",
                            ProfesorId = 2
                        },
                        new
                        {
                            Id = 5,
                            Creditos = 3,
                            Nombre = "Historia",
                            ProfesorId = 3
                        },
                        new
                        {
                            Id = 6,
                            Creditos = 3,
                            Nombre = "Literatura",
                            ProfesorId = 3
                        },
                        new
                        {
                            Id = 7,
                            Creditos = 3,
                            Nombre = "Inglés I",
                            ProfesorId = 4
                        },
                        new
                        {
                            Id = 8,
                            Creditos = 3,
                            Nombre = "Francés I",
                            ProfesorId = 4
                        },
                        new
                        {
                            Id = 9,
                            Creditos = 3,
                            Nombre = "Filosofía",
                            ProfesorId = 5
                        },
                        new
                        {
                            Id = 10,
                            Creditos = 3,
                            Nombre = "Ética",
                            ProfesorId = 5
                        });
                });

            modelBuilder.Entity("Api_University.Models.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Profesores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Dr. García"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Dra. López"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Dr. Martínez"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Dra. Rodríguez"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Dr. González"
                        });
                });

            modelBuilder.Entity("Api_University.Models.EstudianteMateriaProfesor", b =>
                {
                    b.HasOne("Api_University.Models.Estudiante", "Estudiante")
                        .WithMany("EstudianteMateriaProfesores")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_University.Models.Materia", "Materia")
                        .WithMany("EstudianteMateriaProfesores")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_University.Models.Profesor", "Profesor")
                        .WithMany()
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Materia");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Api_University.Models.Materia", b =>
                {
                    b.HasOne("Api_University.Models.Profesor", "Profesor")
                        .WithMany("Materias")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Api_University.Models.Estudiante", b =>
                {
                    b.Navigation("EstudianteMateriaProfesores");
                });

            modelBuilder.Entity("Api_University.Models.Materia", b =>
                {
                    b.Navigation("EstudianteMateriaProfesores");
                });

            modelBuilder.Entity("Api_University.Models.Profesor", b =>
                {
                    b.Navigation("Materias");
                });
#pragma warning restore 612, 618
        }
    }
}
